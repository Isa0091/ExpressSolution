// <auto-generated />
using System;
using ExpressSolution.Stores.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpressSolution.Stores.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExpressSolution.Stores.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ExpressSolution.Stores.Store", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IdCategory")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("ExpressSolution.Stores.Category", b =>
                {
                    b.OwnsOne("ExpressSolution.DescriptionVo", "Description", b1 =>
                        {
                            b1.Property<string>("CategoryId")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<string>("ExtendedDescription")
                                .HasMaxLength(1500)
                                .HasColumnType("nvarchar(1500)");

                            b1.HasKey("CategoryId");

                            b1.ToTable("Categories");

                            b1.WithOwner()
                                .HasForeignKey("CategoryId");
                        });

                    b.OwnsMany("ExpressSolution.DynamicDataVo", "DynamicData", b1 =>
                        {
                            b1.Property<string>("DataName")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("CategoryId")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("DataValue")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DataName", "CategoryId");

                            b1.HasIndex("CategoryId");

                            b1.ToTable("Categories_DynamicData");

                            b1.WithOwner()
                                .HasForeignKey("CategoryId");
                        });

                    b.OwnsOne("ExpressSolution.MultimediaVo", "Logo", b1 =>
                        {
                            b1.Property<string>("CategoryId")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("MimeType")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<int>("MultimediaType")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("UrlMultimedia")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.HasKey("CategoryId");

                            b1.ToTable("Categories");

                            b1.WithOwner()
                                .HasForeignKey("CategoryId");
                        });

                    b.Navigation("Description");

                    b.Navigation("DynamicData");

                    b.Navigation("Logo");
                });

            modelBuilder.Entity("ExpressSolution.Stores.Store", b =>
                {
                    b.HasOne("ExpressSolution.Stores.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("ExpressSolution.DescriptionVo", "Description", b1 =>
                        {
                            b1.Property<string>("StoreId")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<string>("ExtendedDescription")
                                .HasMaxLength(1500)
                                .HasColumnType("nvarchar(1500)");

                            b1.HasKey("StoreId");

                            b1.ToTable("Stores");

                            b1.WithOwner()
                                .HasForeignKey("StoreId");
                        });

                    b.OwnsMany("ExpressSolution.DynamicDataVo", "DynamicData", b1 =>
                        {
                            b1.Property<string>("DataName")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("StoreId")
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("DataValue")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DataName", "StoreId");

                            b1.HasIndex("StoreId");

                            b1.ToTable("Stores_DynamicData");

                            b1.WithOwner()
                                .HasForeignKey("StoreId");
                        });

                    b.OwnsMany("ExpressSolution.Stores.MultimediaStore", "Multimedia", b1 =>
                        {
                            b1.Property<string>("Id")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<DateTimeOffset>("DateCreated")
                                .HasColumnType("datetimeoffset");

                            b1.Property<int>("MultimediaRelevance")
                                .HasColumnType("int");

                            b1.Property<string>("StoreId")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("Id");

                            b1.HasIndex("StoreId");

                            b1.ToTable("MultimediaStore");

                            b1.WithOwner()
                                .HasForeignKey("StoreId");

                            b1.OwnsOne("ExpressSolution.MultimediaVo", "DataMultimedia", b2 =>
                                {
                                    b2.Property<string>("MultimediaStoreId")
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("MimeType")
                                        .HasMaxLength(200)
                                        .HasColumnType("nvarchar(200)");

                                    b2.Property<int>("MultimediaType")
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .HasMaxLength(200)
                                        .HasColumnType("nvarchar(200)");

                                    b2.Property<string>("UrlMultimedia")
                                        .IsRequired()
                                        .HasMaxLength(500)
                                        .HasColumnType("nvarchar(500)");

                                    b2.HasKey("MultimediaStoreId");

                                    b2.ToTable("MultimediaStore");

                                    b2.WithOwner()
                                        .HasForeignKey("MultimediaStoreId");
                                });

                            b1.Navigation("DataMultimedia");
                        });

                    b.OwnsMany("ExpressSolution.Stores.StoreContact", "Contacts", b1 =>
                        {
                            b1.Property<string>("Id")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<DateTimeOffset>("DateCreated")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("StoreId")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("Id");

                            b1.HasIndex("StoreId");

                            b1.ToTable("StoreContact");

                            b1.WithOwner()
                                .HasForeignKey("StoreId");

                            b1.OwnsOne("ExpressSolution.ContactDataVo", "ContactData", b2 =>
                                {
                                    b2.Property<string>("StoreContactId")
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("Email")
                                        .HasMaxLength(200)
                                        .HasColumnType("nvarchar(200)");

                                    b2.Property<string>("LandLineNumber")
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("MobileNumber")
                                        .HasMaxLength(50)
                                        .HasColumnType("nvarchar(50)");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(300)
                                        .HasColumnType("nvarchar(300)");

                                    b2.HasKey("StoreContactId");

                                    b2.ToTable("StoreContact");

                                    b2.WithOwner()
                                        .HasForeignKey("StoreContactId");
                                });

                            b1.Navigation("ContactData");
                        });

                    b.Navigation("Category");

                    b.Navigation("Contacts");

                    b.Navigation("Description");

                    b.Navigation("DynamicData");

                    b.Navigation("Multimedia");
                });
#pragma warning restore 612, 618
        }
    }
}
